name: deploy dockerhub ecs

on: 
  push:
    branches: [main]  
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      versao: ${{ steps.docker_build.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get NPM Cache Directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          # pega o hash do package-lock.json por menos que seja a modificação, evitando deprecação de dependencias
          key: npm-cache-dir-${{ hashFiles('**/package-lock.json') }}  
      
      - name: Install Dependencies
        run: npm install
      
      - name: Run Tests
        run: npm test

      - name: Build App
        run: npm run build

      - name: TAG Generate
        run: |
          TAG=$(date +%Y-%m-%d-%H-%M-%S)
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
#          docker build -t github-actions-site:$TAG .  
        id: docker_build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} 

      - name: Build and Push Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-site:${{ steps.docker_build.outputs.tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-site:latest     

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition-arn: arn:aws:ecs:us-east-1:162438969470:task-definition/github-actions-site
          container-name: github-actions-site
          image: ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-site:latest 

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ecs-avera-github-actions-service
          cluster: avera-githubactions-cluster
          wait-for-service-stability: true